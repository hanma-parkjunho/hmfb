-- Autogenerated: do not edit this file

CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME(6) NOT NULL,
	START_TIME DATETIME(6) DEFAULT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(250) ,
	DATE_VAL DATETIME(6) DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME DATETIME(6) NOT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_STEP_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_SEQ);

CREATE TABLE `BATCH_JOB` (
	`JOB_CODE` VARCHAR(9) NOT NULL COMMENT '작업식별자',
	`JOB_DESC` VARCHAR(100) NOT NULL COMMENT '작업설명',
	`JOB_CYCLE` VARCHAR(1) NULL DEFAULT 'A' COMMENT '작업주기',
	`JOB_TYPE` VARCHAR(3) NOT NULL COMMENT '작업유형',
	`PROGRAM_NAME` VARCHAR(50) NOT NULL COMMENT '프로그램 명',
	`COMMIT_COUNT` INT(4) NULL DEFAULT NULL COMMENT '커밋건수',
	`INPUT_DATA_SELECTOR` VARCHAR(100) NULL DEFAULT NULL COMMENT '입력데이터지시자',
	`OUTPUT_DATA_SELECTOR` VARCHAR(100) NULL DEFAULT NULL COMMENT '출력데이터지시자',
	`EXCEPTION_POLICY` VARCHAR(1) NULL DEFAULT NULL COMMENT '예외정책구분코드',
	`CRON_EXPRESSION` VARCHAR(100) NULL DEFAULT NULL COMMENT 'cron 표현식',
    `USE_YN` CHAR(1) NULL DEFAULT 'N' COMMENT '사용여부',
	`RUN_PARAM` VARCHAR(200) NULL DEFAULT NULL COMMENT '실행 파라미터',
	`REGISTER_DTM` VARCHAR(17) NOT NULL COMMENT '등록일시',
	`REGISTER_USER_ID` VARCHAR(10) NULL DEFAULT 'EMPTY' COMMENT '등록사용자ID',
	`MODIFY_DTM` VARCHAR(17) NOT NULL COMMENT '변경일시',
	`MODIFY_USER_ID` VARCHAR(10) NULL DEFAULT 'EMPTY' COMMENT '변경사용자ID',
	PRIMARY KEY (`JOB_CODE`)
)
COMMENT='batch job meta'
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10001', 'CSV F2D 배치 테스트', 'A', 'F2D', 'hmfb.batch.sample.BJDEP10001', 2, '/fwtest_YYYYMMDD.csv', 'TDEP10001.openAccount', 'S', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10002', 'FIX F2D 배치 테스트', 'D', 'F2D', 'hmfb.batch.sample.BJDEP10002', 2, '/fwtest_YYYYMMDD.sam', 'TDEP10001.openAccount', 'S', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10003', 'CSV D2F 배치 테스트', 'A', 'D2F', 'hmfb.batch.sample.BJDEP10003', 2, 'TDEP10001.selectAccountListByCondition', '/fwtest_YYYYMMDD.csv', 'S', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10004', 'FIX D2F 배치 테스트', 'D', 'D2F', 'hmfb.batch.sample.BJDEP10004', 2, 'TDEP10001.selectAccountListByCondition', '/fwtest_YYYYMMDD.sam', 'S', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10005', 'D2D 배치 테스트',     'D', 'D2D', 'hmfb.batch.sample.BJDEP10005', 2, 'TDEP10001.selectAccountListByCondition', '', 'S', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('DEPD10006', '커스텀배치 테스트',     'A', 'CTM', 'hmfb.batch.sample.BJDEP10006', 0, '', '', 'N', '', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');
INSERT INTO `BATCH_JOB` (`JOB_CODE`, `JOB_DESC`, `JOB_CYCLE`, `JOB_TYPE`, `PROGRAM_NAME`, `COMMIT_COUNT`, `INPUT_DATA_SELECTOR`, `OUTPUT_DATA_SELECTOR`, `EXCEPTION_POLICY`, `CRON_EXPRESSION`, `USE_YN`, `RUN_PARAM`, `REGISTER_DTM`, `REGISTER_USER_ID`, `MODIFY_DTM`, `MODIFY_USER_ID`) VALUES ('F05A00200', 'outbound 전문 배치 샘플','A', 'D2D', 'hmfb.batch.sample.BJF0500200', 1, 'TDEP10001.selectAccountListByCondition', '', 'S', '0 0/5 * * * *', 'Y', '', '20221219150159001', 'SIUSER0001', '20221219150159001', 'SIUSER0001');

CREATE TABLE BATCH_EXECUTION (
	JOB_UUID CHAR(36) NOT NULL COMMENT '작업 UUID',
	JOB_CODE VARCHAR(9) NOT NULL COMMENT '작업식별자',
	JOB_EXECUTION_ID BIGINT  NOT NULL COMMENT '배치 실행 ID',	
	JOB_YMD CHAR(8) NOT NULL COMMENT '작업년월일',
	RUN_PARAM VARCHAR(200) NULL DEFAULT '' COMMENT '실행 파라미터',
	START_DTM CHAR(17) NOT NULL COMMENT '시작일시',
	END_DTM CHAR(17) NULL DEFAULT NULL COMMENT '종료일시',
	PROC_STATUS CHAR(1) NOT NULL COMMENT '진행상태구분코드',
	EXIT_MESSAGE VARCHAR(2500) DEFAULT '' COMMENT '에러메시지',
	PROCESS_SERVER_NAME VARCHAR(100) NOT NULL COMMENT '실행 서버명',
	PROCESS_WAS_ID VARCHAR(100) NULL DEFAULT '' COMMENT '실행 WAS ID',
	TOTAL_COUNT BIGINT NULL DEFAULT 0 COMMENT '전체 건수',
	COMPLETED_COUNT BIGINT NULL DEFAULT 0 COMMENT '완료 건수',
	COMMIT_COUNT INT(4) NULL DEFAULT 0 COMMENT '커밋건수',
	INPUT_DATA_SELECTOR VARCHAR(100) NULL DEFAULT NULL COMMENT '입력데이터지시자',
	OUTPUT_DATA_SELECTOR VARCHAR(100) NULL DEFAULT NULL COMMENT '출력데이터지시자',
	EXCEPTION_POLICY VARCHAR(1) NULL DEFAULT NULL COMMENT '예외정책구분코드',
	REGISTER_DTM VARCHAR(17) NOT NULL COMMENT '등록일시',
	REGISTER_USER_ID VARCHAR(10) NULL DEFAULT 'EMPTY' COMMENT '등록사용자ID',
	MODIFY_DTM VARCHAR(17) NOT NULL COMMENT '변경일시',
	MODIFY_USER_ID VARCHAR(10) NULL DEFAULT 'EMPTY' COMMENT '변경사용자ID',
	PRIMARY KEY (JOB_UUID)
)
COMMENT='batch execution info'
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;